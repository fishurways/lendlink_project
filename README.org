#+TITLE: LenkLink Project How To
#+AUTHOR: fishurways + kholidfu

* Table of Contents                                                     :TOC:
- [[#requirement][Requirement]]
- [[#library-needed][Library needed]]
- [[#fitur][Fitur]]
  - [[#site-page][Site Page]]
  - [[#route][Route]]
  - [[#finishing][Finishing]]
- [[#cara-run-app][Cara run app]]
- [[#cara-menambahkan-user][Cara Menambahkan User]]
- [[#lokasi-db][Lokasi DB]]
- [[#from-old-docs][From Old Docs]]

* Requirement
- [ ] sqlite3
- [ ] sqlite3browser

* Library needed
- flask
- flask login
- flask bootstrap 5
- sqlite3 for simple dbase
- or check at requirements.txt

* Fitur
** Site Page
- [ ] Homepage
- [ ] Login page
- [ ] Register page
- [ ] Inventory page
- [ ] Adding inventory page
- [ ] Edit inventory page

** Route
- [X] index
- [X] login
- [X] register
- [ ] users add/edit/delete/view
- [ ] tools add/edit/delete/view

** Finishing
- [ ] Homepage
- [ ] Login page
- [ ] Register page
- [ ] Admin page

* Cara run app
#+BEGIN_SRC sh
cd git/lendlink_project
. bin/activate
flask --app app/views.py --debug run
#+END_SRC

* Cara Menambahkan User

#+BEGIN_SRC sh
python -m flask shell
#+END_SRC

#+BEGIN_SRC python
from werkzeug.security import generate_password_hash, check_password_hash
from app import db, User

new_user = User(email="sopier@gmail.com", username="kholidfu", password=generate_password_hash("123")
db.session.add(new_user)
db.session.commit()
#+END_SRC

* Lokasi DB

#+BEGIN_SRC text
~/git/lendlink_project/var/app-instance/users.db
#+END_SRC

* From Old Docs
#+BEGIN_SRC md
## Fitur
- user bisa register by email
- user bisa sign in
- mengetahui status peminjaman alat
- sebagai tools untuk inventaris alat

## Todo
- [ ] user auth
-- [ ] create login page
-- [ ] create register page
-- [ ] create profile page for registered user
- [ ] dbase schema

## How to run this project
```
$ cd project_dir
# pull from repo first
$ git pull
# install any new package (if any)
$ pip install -r requirements.txt
# activate the virtual environment
$ . bin/activate
# atau kalo di windows
$ Set-ExecutionPolicy Unrestricted -Scope Process
$ Scripts\activate
# run flask server with debug mode On
$ flask --app .app/views.py --debug run
# or if you prefer using gunicorn
$ gunicorn app.views:app
```

# heroku
```
1. install heroku
curl https://cli-assets.heroku.com/install.sh | sh
2. heroku login
heroku login
3. set git remote
heroku git:remote -a lendlink-project 
4. update to heroku repo
git push heroku main
```

## Reference
- Flask Login Tuts: https://www.digitalocean.com/community/tutorials/how-to-add-authentication-to-your-app-with-flask-login
- Flask Login Github: https://github.com/maxcountryman/flask-login
- HTML login page: https://mdbootstrap.com/docs/standard/extended/login/
#+END_SRC
